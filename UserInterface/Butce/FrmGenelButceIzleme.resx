<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnHesapla.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>